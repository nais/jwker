name: Build and deploy
on:
  push:
    paths-ignore:
      - '*.md'
      - 'LICENSE.md'
env:
  NAME: jwker
  FEATURE_REPOSITORY: oci://europe-north1-docker.pkg.dev/nais-io/nais/feature

jobs:
  go_version:
    outputs:
      go_version: ${{ steps.go_version.outputs.GO_VERSION }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Find Go version
        id: go_version
        run: |
          echo "GO_VERSION=$(grep golang .tool-versions | awk '{print $2}')" >> $GITHUB_OUTPUT
  test:
    runs-on: ubuntu-latest
    needs: go_version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go_version.outputs.go_version }}
          cache-dependency-path: ./go.sum
      - name: Setup Test
        run: |
          make setup-envtest
      - name: Check for vulnerable dependencies and static code
        run: make check
      - name: Run tests
        run: make test

  build_and_push:
    if: github.ref == 'refs/heads/master'
    outputs:
      version: ${{ steps.build-push-sign.outputs.version }}
    needs:
      - test
    permissions:
      contents: "read"
      packages: "write"
      id-token: "write"
    name: build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: nais/platform-build-push-sign@main
        id: build-push-sign
        with:
          name: ${{ env.NAME }}
          google_service_account: gh-${{ env.NAME }}
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          push_ghcr: true
          push: true

      - name: Update values.yaml
        run: |
          yq -i ".jwker.tag = \"${{ steps.build-push-sign.outputs.version }}\"" charts/values.yaml

      - uses: azure/setup-helm@v4
        name: "Setup Helm"
        with:
          version: "v3.16.2"

      - name: Build Chart
        run: |-
          yq -i ".version = \"${{ steps.build-push-sign.outputs.version }}\"" charts/Chart.yaml
          helm package charts

      - name: Push Chart
        run: |-
          helm push tokenx-${{ env.NAME }}*.tgz ${{ env.FEATURE_REPOSITORY }}

  rollout:
    needs:
      - build_and_push
    runs-on: fasit-deploy
    permissions:
      id-token: write
    steps:
      - uses: nais/fasit-deploy@v2
        with:
          chart: ${{ env.FEATURE_REPOSITORY }}/tokenx-${{ env.NAME }}
          version: ${{ needs.build_and_push.outputs.version }}
